save the model
0 loss LogLikelihood:  -92.16155685366027 Memory Usage: 4.1
save the model
1 loss LogLikelihood:  -286.60818730000915 Memory Usage: 4.1
save the model
2 loss LogLikelihood:  -359.01090273302736 Memory Usage: 4.2
save the model
3 loss LogLikelihood:  -455.5475721079547 Memory Usage: 4.2
save the model
4 loss LogLikelihood:  -586.9858287010185 Memory Usage: 4.2
save the model
5 loss LogLikelihood:  -594.6701258992912 Memory Usage: 4.3
save the model
6 loss LogLikelihood:  -623.6300373459577 Memory Usage: 4.3
Traceback (most recent call last):
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/main_fcpflow.py", line 62, in <module>
    tl.train(FCPflow, loader, optimizer, config["FCPflow"]["num_epochs"],
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/tools/tools_train.py", line 198, in train
    gen, logdet = model(data, cond)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/alg/models_fcpflow_lin.py", line 289, in forward
    x, log_det1 = block(x, condition)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/alg/models_fcpflow_lin.py", line 258, in forward
    x, log_det3 = self.coupling_layer(x, condition)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/alg/models_fcpflow_lin.py", line 168, in forward
    x = x + self._positional_encoding(x).to(device)
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/main_fcpflow.py", line 62, in <module>
    tl.train(FCPflow, loader, optimizer, config["FCPflow"]["num_epochs"],
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/tools/tools_train.py", line 198, in train
    gen, logdet = model(data, cond)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/alg/models_fcpflow_lin.py", line 289, in forward
    x, log_det1 = block(x, condition)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/alg/models_fcpflow_lin.py", line 258, in forward
    x, log_det3 = self.coupling_layer(x, condition)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/wxia/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/wxia/comparative_analysis_for_data_agumentaion/data_augmentation/FCPFlow/alg/models_fcpflow_lin.py", line 168, in forward
    x = x + self._positional_encoding(x).to(device)
KeyboardInterrupt
